# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-18.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.300' 

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
    - job: "CI"
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core $(dotnetSdkVersion)'
        inputs:
          packageType: sdk
          version: '$(dotnetSdkVersion)'
      
      - task: Npm@1
        displayName: 'Run npm install'
        inputs:
          verbose: false
      
      - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
        displayName: 'Compile Sass assets'
      
      - task: gulp@1
        displayName: 'Run gulp tasks'
      
      - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
        displayName: 'Write build info'
        workingDirectory: $(wwwrootDir)
      
      - task: NuGetAuthenticate@0
  
      - task: DotNetCoreCLI@2
        displayName: 'Restore project dependencies'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
          feedsToUse: 'config'
          nugetConfigPath: 'nuget.config'
      
      # - template: templates/build.yml
      #   parameters:
      #     buildConfiguration: 'Debug'
      
      - template: templates/build.yml
        parameters:
          buildConfiguration: 'Release'
      
      # publish the .zip file to Azure Pipelines
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts: drop'
        condition: succeeded() # run the task only when the previous task succeeds

- stage: 'Dev'
  displayName: 'Deploy the web application'
  dependsOn: Build
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
    )
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              appName: '$(WebAppNameDev)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'