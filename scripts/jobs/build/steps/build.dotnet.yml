parameters:
- name: dotnetSdkVersion
  displayName: dotnetSdkVersion
  type: string
  default: '3.1.300'
- name: buildConfiguration
  displayName: buildConfiguration
  type: string
  default: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core ${{ parameters.dotnetSdkVersion }}'
  inputs:
    packageType: sdk
    version: '${{ parameters.dotnetSdkVersion }}'

- task: NuGetAuthenticate@0
  
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'config'
    nugetConfigPath: 'nuget.config'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - ${{ parameters.buildConfiguration }}'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration ${{ parameters.buildConfiguration }}'
    projects: '**/*.csproj'

- template: test.dotnet.yml
  parameters:
    buildConfiguration: '${{ parameters.buildConfiguration }}'

# publish, or package, the app's build results (including its dependencies) into a folder. 
# zipAfterPublish argument specifies to add the built results to a .zip file.
- task: DotNetCoreCLI@2
  displayName: 'Publish the project - ${{ parameters.buildConfiguration }}'
  inputs:
    command: 'publish'
    projects: |
      **/*.csproj
      !**/*.*Tests*.csproj
    publishWebProjects: false
    arguments: '--no-build --configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)/${{ parameters.buildConfiguration }}'
    zipAfterPublish: true    